
## ========== plotting multiple plots on one page using ggarrange ========== ## 

#install.packages("ggpubr")
library("ggpubr")

# create plots as normal in ggplot. 
# name them when you plot.
# eg Here i have 4 plots called plot1 - 4


ggarrange(plot1, plot2, plot3, plot4,
          labels = c("A", "B", "C" , "D"), # can add labels. Sometimes these get in the way of the plots a bit if you have too many.
          ncol = 2, nrow=2, # choose how many rows and or columns you want it plotted in. Can leave this out and let ggpubr decide. 
          common.legend = TRUE, # if all plots share the same legend. default is F
          align="hv" # to choose how you wnat them aligned. If its horizontal & vertical then "hv" or appropriate letter alone if not eg "h" 
) # close

# you can leave out or add as many of the arguments above as you want. to start maybe just do
ggarrange(plot1, plot2, plot3, plot4)

# if you want to turn off legend then include the argument legend="none"

## ========== reducing space between plots ================

To do this, you need to use the plot.margin argument of theme() in ggplot2 when 
# making hte plots in the first place
# for example - I want to put two plots on top of each other with no space at all
# plot1 is gonna sit on top of plo2 so bottom margin of plot1 will be negative
# and top margin of plot2 will be negative
# where order of margins is c(top, right,bottom,left)
# also, this doestn work for common legend - it messes things up. 

plot1 + plot.margin=unit(c(1,1,-0.5,1), "cm"),

plot2 + plot.margin=unit(c(-0.5,1,1,1), "cm"),

ggarrange(plot1,plot2,
          nrow=2,ncol=1,
          align=hv)
          
# if you want the plots to have diffent heights, include the heights arguments
# eg 

 ggarrange(plot1,plot2,
          nrow=2,ncol=1,
          align=hv,
          heights = c(1,2)# this will make plot 2 twice height of plot1.
          widths=c(1,1)) # can do the same for widths. 


## ======  Arrange odd numbered plots ==========
# ::::::::::::::::::::::::::::::::::::::::::::::::::
# say you have 5 plots, and you want 2 on first row, one on middle row and 2 on last row, then use "NULL"
# to make sure they're the same size you can define the plot size by widths=() and heights=()

myArrangedPlots = ggarrange(plot1, plot2, plot3, NULL, plot4,plot5,
                       ncol = 2, nrow = 3,  align = "hv", 
                       widths = c(1, 1), heights = c(1, 1),
                       labels = c("A", "","B", "C", "D", ""),
                       legend = "none")

# :::::::::::::::::: annotate with a common title ::::::::::::::::::::::::::::::::
## if you want to add one big title at the top of your plot use ggpubr argument annotate_figure():

plotWtitle = annotate_figure(myArrangedPlots,
                             top = text_grob("My many plots",
                                             color = "black", face = "bold", size = 17)) # change appearance of text
                                             
## here is an example of one with greek symbols in
plotWtitle = annotate_figure(myPlots,
                             top = text_grob(expression(paste(" ", Delta, " removal at 19", degree, "C",  " (required - achieved FIB removal)")),
                                             color = "black", face = "bold", size = 17))
                                
# can put these text boxed in many diff place, see examples on this page:
https://rpkgs.datanovia.com/ggpubr/reference/annotate_figure.html


# now to write out this grid of plots (I usually do preview to find out what size is best)
ggsave("My_big_plotGrid.pdf",plotWtitle, width=12, height=8.5, units="in")



### if you want to specify relative heights or widths for arranging different sized plots, probably cowplot 
#Â package is better:
library(cowplot)

plot_grid(plot1, NULL, nrow=1,rel_widths =  c(2,1))
# plot1 will be twice as wide as 'NULL' plot
# nice if you're arranging plots with diff number of facets on and want then to line up





# Another link to a page with more cool stuff:

http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/81-ggplot2-easy-way-to-mix-multiple-graphs-on-the-same-page/



